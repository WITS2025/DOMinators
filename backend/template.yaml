AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda + API Gateway using SAM

Resources:

  TripTrekTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  TripTrekImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: triptrek-images-bucket  # ⚠️ must be globally unique

  TripTrekAPI:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: TripTrekAPI
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - PATCH
          - DELETE
        AllowOrigins:
          - "*"
        AllowHeaders:
          - "*"

  createTrip:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: createTrip
      Handler: index.handler
      Runtime: nodejs22.x 
      CodeUri: create/
      Environment:
        Variables:
          LOCATIONS_TABLE: !Ref TripTrekTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTrekTable
      Events:
        ApiForMyApp:
          Type: HttpApi
          Properties:
            Path: /createTrip
            Method: POST
            ApiId: !Ref TripTrekAPI

  getTripList:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getTripList
      Handler: index.handler
      Runtime: nodejs22.x
      CodeUri: read/
      Environment:
        Variables:
          LOCATIONS_TABLE: !Ref TripTrekTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTrekTable
      Events:
        ApiForMyApp:
          Type: HttpApi
          Properties:
            Path: /getTripList
            Method: GET
            ApiId: !Ref TripTrekAPI
  
  updateTrip:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: updateTrip
      Handler: index.handler
      Runtime: nodejs22.x
      CodeUri: update/
      Environment:
        Variables:
          LOCATIONS_TABLE: !Ref TripTrekTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTrekTable
      Events:
        ApiForMyApp:
          Type: HttpApi
          Properties:
            Path: /updateTrip
            Method: PATCH
            ApiId: !Ref TripTrekAPI

  deleteTrip:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deleteTrip
      Handler: index.handler
      Runtime: nodejs22.x
      CodeUri: delete/
      Environment:
        Variables:
          LOCATIONS_TABLE: !Ref TripTrekTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTrekTable
      Events:
        ApiForMyApp:
          Type: HttpApi
          Properties:
            Path: /deleteTrip
            Method: DELETE
            ApiId: !Ref TripTrekAPI

  getSignedUrl:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getSignedUrl
      Handler: index.handler
      Runtime: nodejs22.x
      CodeUri: upload/       # Folder name is 'upload' for the signed URL Lambda
      Environment:
        Variables:
          BUCKET_NAME: triptrek-images-bucket
          LOCATIONS_TABLE: !Ref TripTrekTable
      Policies:
        - S3CrudPolicy:
            BucketName: triptrek-images-bucket
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTrekTable
      Events:
        ApiForMyApp:
          Type: HttpApi
          Properties:
            Path: /getSignedUrl
            Method: POST
            ApiId: !Ref TripTrekAPI

Outputs:
  ApiUrl:
    Description: "HTTP API endpoint base URL"
    Value: !Sub "https://${TripTrekAPI}.execute-api.${AWS::Region}.amazonaws.com"

  ImageBucketName:
    Description: "S3 bucket storing trip images"
    Value: !Ref TripTrekImageBucket

  DynamoDBTableName:
    Description: "DynamoDB table name for TripTrek"
    Value: !Ref TripTrekTable
